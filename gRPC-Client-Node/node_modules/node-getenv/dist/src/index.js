"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("./errors");
function getNum(name, defaults) {
    const v = process.env[name];
    if (v === undefined) {
        return defaults;
    }
    const n = Number(v);
    return Object.is(n, NaN) ? defaults : n;
}
exports.getNum = getNum;
function getStr(name, defaults) {
    const v = process.env[name];
    if (v === undefined) {
        return defaults;
    }
    return v;
}
exports.getStr = getStr;
function getBool(name, defaults) {
    const v = process.env[name];
    if (v === undefined) {
        return defaults;
    }
    switch (v.toUpperCase()) {
        case 'TRUE':
        case 'YES':
        case 'ON':
        case 'OPEN':
        case 'T':
        case 'Y':
        case '1':
            return true;
        case 'FALSE':
        case 'NO':
        case 'OFF':
        case 'CLOSE':
        case 'F':
        case 'N':
        case '0':
            return false;
        default:
            return defaults;
    }
}
exports.getBool = getBool;
function bindEnv(defaultEnvs) {
    for (const name of Object.keys(defaultEnvs)) {
        const defaultValue = defaultEnvs[name];
        switch (typeof defaultValue) {
            case 'boolean':
                defaultEnvs[name] = getBool(name, defaultValue);
                break;
            case 'number':
                defaultEnvs[name] = getNum(name, defaultValue);
                break;
            case 'string':
                defaultEnvs[name] = getStr(name, defaultValue);
                break;
            default:
                defaultEnvs[name] = getStr(name);
        }
    }
    return defaultEnvs;
}
exports.bindEnv = bindEnv;
function requireStr(env) {
    const v = getStr(env);
    if (v === undefined) {
        throw new errors_1.NeedEnvError(env);
    }
    return v;
}
exports.requireStr = requireStr;
function requireNum(env) {
    const v = getNum(env);
    if (v === undefined) {
        throw new errors_1.NeedEnvError(env);
    }
    return v;
}
exports.requireNum = requireNum;
function requireBool(env) {
    const v = getBool(env);
    if (v === undefined) {
        throw new errors_1.NeedEnvError(env);
    }
    return v;
}
exports.requireBool = requireBool;
function requireStrOrExit(env) {
    try {
        const v = requireStr(env);
        return v;
    }
    catch (e) {
        console.log(e.message);
        process.exit(1);
    }
}
exports.requireStrOrExit = requireStrOrExit;
function requireNumOrExit(env) {
    try {
        const v = requireNum(env);
        return v;
    }
    catch (e) {
        console.log(e.message);
        process.exit(1);
    }
}
exports.requireNumOrExit = requireNumOrExit;
function requireBoolOrExit(env) {
    try {
        const v = requireBool(env);
        return v;
    }
    catch (e) {
        console.log(e.message);
        process.exit(1);
    }
}
exports.requireBoolOrExit = requireBoolOrExit;
//# sourceMappingURL=index.js.map